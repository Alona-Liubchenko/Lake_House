section {
 padding-top: 96px;
 padding-bottom: 96px;
}
.bg-section {
 background-color: #eee4dd;
}
.divider {
 width: 80px;
 height: 4px;
 background-color: var(--accent-color);
 border: none;
}

.about .container {
 display: grid;
 grid-template-areas: "image text";
 grid-template-columns: min-content 1fr;
 grid-template-rows: auto;
 gap: 32px;
}
.about img {
 grid-area: image;
 aspect-ratio: 1 / 1;
 max-width: 320px;
 object-fit: cover;
}
.wrapper {
 grid-area: text;
 columns: 2;
 gap: 24px;
}

.text {
 font-weight: 300;
 font-size: 14px;
 line-height: 20px;
 break-inside: avoid-column;
 color: #353231;
 margin-bottom: 12px;
}

.about .divider {
 grid-area: divider;
 align-self: center;
 justify-self: center;
}

.title {
 font-family: "Merriweather";
 font-weight: 700;
 font-size: 80px;
 line-height: 96px;
 text-align: center;
 color: #5f4f49;
 margin: 0 221px;
}
.illustration {
 width: 100%;
 height: 720px;
 object-fit: cover;
 object-position: bottom;
}
.section-title {
 font-family: "Merriweather";
 font-weight: 400;
 font-size: 32px;
 line-height: 40px;
 color: var(--title-color);
}
.section-text {
 font-family: "Lato";
 font-weight: 300;
 font-size: 16px;
 line-height: 24px;
 color: #353231;
}
.icon {
 width: 60px;
 height: 60px;
}
.arrangements-list {
 display: grid;
 grid-template-columns: repeat(3, 1fr);
 gap: 48px;
 text-align: center;
}

.arrangements-list .grid-list-item {
 display: flex;
 flex-direction: column;
 align-items: center;
}
.premises-list {
 display: grid;
 grid-template-columns: repeat(2, 1fr);
 row-gap: 32px;
 column-gap: 64px;
 --col-gap: 8px;
 --icon-size: 40px;
}
:is(.arrangements-list, .premises-list) p:first-of-type {
 font-weight: bold;
}
.benefits-section {
 display: flex;
 flex-direction: row;
 gap: 64px;
}

.benefits-list {
 display: grid;
 grid-template-columns: repeat(2, 1fr);
 gap: 32px;
 --icon-size: 40px;
 --col-gap: 8px;
}
.grid-list-item {
 display: grid;
 row-gap: 0;
 column-gap: 0;
}

.grid-list-item .icon {
 width: 40px;
 aspect-ratio: 1;
 grid-row: span 2;
}

.grid-list-item:has(.icon) {
 grid-template-columns: min-content 1fr;
}

.grid-list-item:has(.icon) p {
 grid-column: 2;
}

.grid-list-item:has(.icon) p:first-of-type:last-of-type {
 align-self: center;
}

.grid-list-item:has(p + p) {
 grid-template-rows: auto;
}

.grid-list-item:has(p + p) p:last-of-type {
 align-self: start;
}
